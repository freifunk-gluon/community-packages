#!/usr/bin/lua

local site = require 'gluon.site'
local vpn_core = require 'gluon.mesh-vpn'
local sysconfig = require 'gluon.sysconfig'
local ssl = require 'openssl'

local uci = require('simple-uci').cursor()

-- https://stackoverflow.com/a/4991602/3990041
local function file_exists(name)
	local f = io.open(name, 'r')
	if f ~= nil then
		io.close(f)
		return true else return false
	end
end

local vpn = {
	enabled = vpn_core.enabled(),

	client = true,
	dev = vpn_core.get_interface(),
	dev_type = 'tap',
	mark = '0x01/0x01' -- this doesnt work, even though it should, so we have a custom fw rule
}

for key, value in pairs(site.mesh_vpn.openvpn.config()) do
	vpn[key] = value
end

-- if mesh_vpn is on but we have no key, even tho we need one then we can't proceed
if vpn.key ~= nil and not file_exists(vpn.key) then
	if site.mesh_vpn.openvpn.self_signed(true) then
		local name = ssl.x509.name.new{
			{ C = 'CN'},
			{ O = 'gluon' },
			{ CN = sysconfig.primary_mac }
		}

		local key = ssl.pkey.new()

		local cert = ssl.x509:new()
		cert:notbefore(os.time())
		cert:notafter(os.time() + 10 * 365 * 24 * 60)
		cert:subject(name)
		cert:sign(key, name)

		local certf = io.open(vpn.cert, 'w+')
		certf:write(cert:export())
		certf:close()

		local keyf = io.open(vpn.key, 'w+')
		keyf:write(key:export())
		keyf:close()
	else
		vpn.enabled = false
	end
end

if vpn.ca ~= nil and not file_exists(vpn.ca) then
	local caf = io.open(vpn.ca, 'w+')
	caf:write(site.mesh_vpn.openvpn.ca())
	caf:close()
end

uci:delete('openvpn', 'mesh_vpn')
if vpn.enabled then
	uci:section('openvpn', 'openvpn', 'mesh_vpn', vpn)
end

uci:section('firewall', 'rule', 'openvpn_mark', {
	name = 'Mark packets to/from VPN clients',
        target = 'MARK',
        proto = 'udp',
        dest_port = '1194',
        set_mark = '0x01/0x01'
})

uci:save('openvpn')
uci:save('firewall')
