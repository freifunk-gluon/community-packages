#!/usr/bin/lua

local site = require 'gluon.site'
local uci = require("simple-uci").cursor()

local privkey = uci:get("wireguard", "mesh_vpn", "privatekey") or ""

local function valid_wireguard_key(wireguard_key)
	return wireguard_key and wireguard_key:match("^" .. ("[%a%d+/]"):rep(42) .. "[AEIMQUYcgkosw480]=$")
end

if not valid_wireguard_key(privkey) then
	privkey = ""
end

-- Clean up previous configuration
uci:delete_all('wireguard', 'peer', function(peer)
	return peer.preserve ~= '1'
end)
-- Clean up previous configuration
uci:delete_all('wireguard', 'wireguard', function(peer)
	return peer.preserve ~= '1'
end)

-- migrate fastd.mesh_vpn nodes to gluon.mesh_vpn
if not uci:get_bool('gluon', 'mesh_vpn', 'enabled') and uci:get_bool('fastd', 'mesh_vpn', 'enabled') then
	uci:set('gluon', 'mesh_vpn', 'enabled', true)
end

uci:section("wireguard", "wireguard", "mesh_vpn", {
	iface = site.mesh_vpn.wireguard.iface(),
	broker = site.mesh_vpn.wireguard.broker(),
	privatekey = privkey,
})

for name, peer in pairs(site.mesh_vpn.wireguard.peers()) do
	uci:section("wireguard", "peer", "peer_" .. name, {
		enabled = true,
		endpoint = peer.endpoint,
		publickey = peer.publickey,
		link_address = peer.link_address,
	})
end

uci:save('wireguard')
